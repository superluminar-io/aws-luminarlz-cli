centralSecurityServices:
  delegatedAdminAccount: Audit
  ebsDefaultVolumeEncryption:
    enable: true
    excludeRegions: []
  s3PublicAccessBlock:
    enable: true
    excludeAccounts: []
  scpRevertChangesConfig:
    enable: false
  snsSubscriptions: []
  macie:
    enable: false
    excludeRegions: []
    policyFindingsPublishingFrequency: FIFTEEN_MINUTES
    publishSensitiveDataFindings: true
  guardduty:
    enable: false
    excludeRegions: []
    s3Protection:
      enable: false
      excludeRegions: []
    exportConfiguration:
      enable: false
      overrideExisting: false
      destinationType: S3
      exportFrequency: FIFTEEN_MINUTES
  securityHub:
    # Is configured in customizations-config.yaml since the LZA does not support central configuration yet.
    enable: false
    standards: []
  ssmAutomation:
    excludeRegions: []
    documentSets: []
accessAnalyzer:
  enable: true
iamPasswordPolicy:
  allowUsersToChangePassword: true
  hardExpiry: false
  requireUppercaseCharacters: true
  requireLowercaseCharacters: true
  requireSymbols: true
  requireNumbers: true
  minimumPasswordLength: 14
  passwordReusePrevention: 24
  maxPasswordAge: 90
awsConfig:
  enableConfigurationRecorder: true
  ruleSets: []
cloudWatch:
  metricSets:
    - regions:
        # The log group for organization-level AWS CloudTrail trails is in the home region
        - <% homeRegion %>
      deploymentTargets:
        accounts:
          - Management
      metrics:
        # Monitor the use of the root users
        - filterName: RootUserUsageMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: '{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}'
          metricNamespace: LogMetrics
          metricName: RootUserUsage
          metricValue: "1"
        # Monitor the use of IAM users on the management account
        - filterName: IamUserUsageMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: '{$.userIdentity.type="IAMUser" && $.userIdentity.invokedBy NOT EXISTS && $.userIdentity.accountId = "{{account Management}}" && $.eventType !="AwsServiceEvent"}'
          metricNamespace: LogMetrics
          metricName: IamUserUsage
          metricValue: "1"
  alarmSets:
    - regions:
        - <% homeRegion %>
      deploymentTargets:
        accounts:
          - Management
      alarms:
        # Alarm for the use of the root user
        - alarmName: RootUserUsage
          alarmDescription: Somebody is using the management-primary account root user!
          snsTopicName: security # defined in global-config.yaml
          metricName: RootUserUsage
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # Alarm for the use of IAM users on the management account (breakglass access)
        - alarmName: IamUserUsage
          alarmDescription: Somebody is using an IAM user in the management-primary account!
          snsTopicName: security # defined in global-config.yaml
          metricName: IamUserUsage
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
keyManagementService:
  keySets: []
